---
import { type CollectionEntry, getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry: any) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description}>
  <section
    class="singleProjectWrapper h-full bg-dark text-light fixed w-screen pt-36 pb-28 xl:py-28 px-10 xl:px-20 flex min-h-96 md:min-h-screen flex-row md:justify-between panel section"
    data-color="dark"
  >
    <div
      class="flex min-w-[75%] md:min-w-[50%] flex-col items-start justify-between"
    >
      <div class="flex flex-col">
        <h2 class="text-5xl lg:text-6xl xl:text-8xl 2xl:text-8xl">
          {entry.data.title}
        </h2>
        <p
          class="text-xl max-w-[200px] xl:text-3xl xl:self-end xl:max-w-[253px]"
        >
          {entry.data.subtitle}
        </p>
        <p class="mt-28">
          <Content />
        </p>
      </div>
      <div
        class="absolute bottom-[2em] max-w-[300px] md:max-w-none md:relative md:bottom-0 md:flex flex-row justify-between items-center w-full md:pe-16"
      >
        <p class="text-xl xl:text-3xl">
          {entry.data.tags}
        </p>
      </div>
    </div>
    <div class="imagesWrapper">
      <aside
        class="mt-5 md:mt-0 -z-10 md:relative md:opacity-100 px-6 md:px-28"
      >
        <img
          class="h-full object-cover sm:h-unset min-w-[657px] md:min-w-[1315px]"
          src={entry.data.img}
          alt={entry.data.img_alt || ""}
          loading="lazy"
          decoding="async"
        />
      </aside>
      <aside
        class="mt-5 md:mt-0 -z-10 md:relative md:opacity-100 px-6 md:px-28"
      >
        <img
          class="h-full object-cover sm:h-unset min-w-[657px] md:min-w-[1315px]"
          src={entry.data.img}
          alt={entry.data.img_alt || ""}
          loading="lazy"
          decoding="async"
        />
      </aside>
      <aside
        class="mt-5 md:mt-0 -z-10 md:relative md:opacity-100 px-6 md:px-28"
      >
        <img
          class="h-full object-cover sm:h-unset min-w-[657px] md:min-w-[1315px]"
          src={entry.data.img}
          alt={entry.data.img_alt || ""}
          loading="lazy"
          decoding="async"
        />
      </aside>
    </div>
  </section>
</Layout>
